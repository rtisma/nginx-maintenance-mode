# 1 - not allowed
# 0 - not, not allowed (i.e allowed)
geo $not_allowed {
 	default 0;
        include /etc/nginx/maintenance/not_allowed.conf;
}

server {
    listen 8110; # [CONFIG_1]: Change this to whatever output port
    set $nginx_config_home /etc/nginx; # [CONFIG_2]: change this to match your system.

    ##############################################################################################################
    # Note:
    # All endpoints accessible for allowed ips. Will throw 503 for not_allowed ips when maintenance mode activated. 
    # To activate this functionality, just touch the file /etc/nginx/not_allowed
    ##############################################################################################################
    location / {
        proxy_pass http://localhost:8080; # [CONFIG_3]: change this point to the server url being proxied

	#########
        #  State
	#########
        set $is_maintenance_error 0;
        set $maintenance_mode  0;

	# If this file exists, then enable maintenance mode, otherwise function like normal
	if (-f $nginx_config_home/maintenance/maintenance_mode.semaphore){
          set $maintenance_mode  1;
        }

	# If in maintenance mode, check if the current IP is allowed. This is effectively an AND operation
	if ($maintenance_mode){
	  set $is_maintenance_error $not_allowed;
        }

	# If in maintenance mode AND the IP is not allowed, then throw a 503
	if ($is_maintenance_error){
		return 503; # [CONFIG_4]: change this to whatever error code you want to return
        }
    }

    # Even when in maintenance mode, still allow these endpoints to everyone
    location ~ ^(/isAlive|/entities|/studies/all|/studies/[^\/]+/analysis/[^\/]+[\/]*$|/studies/[^\/]+/analysis$) {
        proxy_pass http://localhost:8080;  # [CONFIG_5]: ensure this matched CONFIG_3
        allow all;
    }
	
    error_page 503 /maintenance.html; #  [CONFIG_6]: ensure this error code matched CONFIG_4
    location = /maintenance.html {
        root $nginx_config_home/maintenance;
    }
	
}

